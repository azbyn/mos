#!/home/azbyn/Projects/mos/mos
capture = 1
module M:
	#a = 7
	#c = capture
	##fun f(): .a #wip
	#fun f(): M.a
	prop p(): 1

#capture = 2
#println(M.f())
#println(M.c)
println(M.p)


<<<struct S:
	#this.member = 4
	val = 5

	#.staticMember = 8
	#.var = 85
	#.var2 = 879
	#fun .a(): 1
	#fun .b(): 2
	#fun .c(): 3

	fun m3(mem2): 41
	this(arg): this.val = arg
	fun toString(): this.val.toString()
	fun .static(x): x+4
	fun m2(mem2, z): 42
	fun member(mem, x): this.val = x
	fun this.alsoMember(): this.val
	fun m5(mem2, z): 40
	##fun X.toBeImplemented(x="4"): x

#println(X.var)
#println(X.var2)
x = S(747)
#println(x.val)
#println(x.m5(5, 1))
#println(x.toString())
#println(x.val = 16)
println(x.static(4))
println(S.static(4))
>>>
##println(x.member(1,2))
#println(x.val)

#println(X.static(0))
<<<
capture = "k"
kp = "kp"
<<<
fun addAll(a, args...):
	res = a
	for i in args:
		res += i
	return res
v = addAll(3, 1, 3, 5)
println(v)
v = (3, 1, 3, 5)
println(v)
iter = v.Iter
println(v.Iter)
for i in v:
	print(i~" ")
#println(v)

>>>
<<<
fun f[capture](var):
	module Foo[capture]:
		struct X:
			fun ctor(this): this.base = 4
			fun toString(this): this.base.toString()

		fun static(): 8
		fun static2(): Foo.X(Foo.static() +2)
		staticThing = Foo.static2()
		k = capture

	Console.setAttr(Attr.Bold, Color.Green)
	println(Console.Flags)
	Console.Fg = Color.Orange
	Console.Flags = Attr.Underline
	println(Foo.staticThing)
	println(var)
	Console.setAttr()
	Console.putnl()
f(98)
>>>
<<<
prop Pi(): Math.Pi
prop Pi=(x): Math.Pi = x
import Math : cos, Pi
println(cos(Pi))

println(hash(5))
println(hash(95))
println(kp)
println(Pi)
>>>
#println("k")

